
# .github/workflows/deploy-production.yml

name: 🚀 Deploy to Production (Blue-Green + Rollback)

on:
  workflow_run:
    workflows: ["Smart CI/CD Pipeline"]
    types:
      - completed

jobs:
  deploy:
    name: Deploy to Production
    if: github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.head_branch == 'main'
    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://your-production-domain.com

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      # ---------------------------------------------
      # 1. Setup Twingate Tunnel
      # ---------------------------------------------
       - name: Connect to Twingate (Service Account)
         uses: twingate/github-action@v1.5
         with:
           service-key: ${{ secrets.TWINGATE_SERVICE_KEY }}
           debug: true

      # ---------------------------------------------
      # 2. Run Blue-Green Deployment over Twingate
      # ---------------------------------------------
      - name: Run Blue-Green Deployment via Remote Shell (over Twingate)
        env:
          PROD_HOST: ${{ secrets.PRODUCTION_HOST }}
          PROD_USER: ${{ secrets.PRODUCTION_USER }}
        run: |
          ssh -o StrictHostKeyChecking=no $PROD_USER@$PROD_HOST << 'EOF'
            set -e
            cd ${{ secrets.PRODUCTION_PROJECT_PATH }}

            echo "🔍 Detecting active color..."
            if [ -f active_color ]; then
              ACTIVE_COLOR=$(cat active_color)
            else
              ACTIVE_COLOR=green
            fi

            if [ "$ACTIVE_COLOR" = "blue" ]; then
              TARGET_COLOR=green
            else
              TARGET_COLOR=blue
            fi

            echo "📦 Pulling latest code..."
            git fetch origin
            git reset --hard origin/main

            echo "💾 Backing up DB..."
            TIMESTAMP=$(date +%Y%m%d%H%M%S)
            mkdir -p backups
            docker exec -t ${{ secrets.PRODUCTION_DB_CONTAINER }} pg_dumpall -c -U ${{ secrets.PRODUCTION_DB_USER }} > backups/db_backup_$TIMESTAMP.sql

            echo "$ACTIVE_COLOR" > previous_color

